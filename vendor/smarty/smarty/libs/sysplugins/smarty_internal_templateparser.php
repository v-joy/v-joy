<?php
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}
;

#line 13 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Internal Plugin Templateparser
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @package    Smarty
 * @subpackage Compiler
 * @author     Uwe Tews
 */
class Smarty_Internal_Templateparser
{
    #line 26 "../smarty/lexer/smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";

    /**
     * result status
     *
     * @var bool
     */
    public $successful = true;
    /**
     * return value
     *
     * @var mixed
     */
    public $retvalue = 0;
    /**
     * counter for prefix code
     *
     * @var int
     */
    public static $prefix_number = 0;
    /**
     * @var
     */
    public $yymajor;
    /**
     * last index of array variable
     *
     * @var mixed
     */
    public $last_index;
    /**
     * last variable name
     *
     * @var string
     */
    public $last_variable;
    /**
     * root parse tree buffer
     *
     * @var Smarty_Internal_ParseTree
     */
    public $root_buffer;
    /**
     * current parse tree object
     *
     * @var Smarty_Internal_ParseTree
     */
    public $current_buffer;
    /**
     * lexer object
     *
     * @var Smarty_Internal_Templatelexer
     */
    private $lex;
    /**
     * internal error flag
     *
     * @var bool
     */
    private $internalError = false;
    /**
     * {strip} status
     *
     * @var bool
     */
    public $strip = false;
    /**
     * compiler object
     *
     * @var Smarty_Internal_TemplateCompilerBase
     */
    public $compiler = null;
    /**
     * smarty object
     *
     * @var Smarty
     */
    public $smarty = null;
    /**
     * template object
     *
     * @var Smarty_Internal_Template
     */
    public $template = null;
    /**
     * block nesting level
     *
     * @var int
     */
    public $block_nesting_level = 0;
    /**
     * xml tag flag
     *
     * @var bool
     */
    private $is_xml = false;
    /**
     * security object
     *
     * @var Smarty_Security
     */
    private $security = null;
    /**
     * asp enabled
     *
     * @var bool
     */
    private $asp_tags = false;
    /**
     * PHP tag handling mode
     *
     * @var int
     */
    private $php_handling = 0;

    /**
     * constructor
     *
     * @param Smarty_Internal_Templatelexer        $lex
     * @param Smarty_Internal_TemplateCompilerBase $compiler
     */
    function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->template = $this->compiler->template;
        $this->smarty = $this->template->smarty;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        if ($this->security = isset($this->smarty->security_policy)) {
            $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->smarty->php_handling;
        }
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template($this);
    }

    /**
     * insert PHP code in current buffer
     *
     * @param string $code
     */
    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree(new Smarty_Internal_ParseTree_Tag($this, $code));
    }

    const TP_VERT = 1;
    const TP_COLON = 2;
    const TP_RDEL = 3;
    const TP_COMMENT = 4;
    const TP_PHPSTARTTAG = 5;
    const TP_PHPENDTAG = 6;
    const TP_PHPENDSCRIPT = 7;
    const TP_ASPSTARTTAG = 8;
    const TP_ASPENDTAG = 9;
    const TP_XMLTAG = 10;
    const TP_TEXT = 11;
    const TP_STRIPON = 12;
    const TP_STRIPOFF = 13;
    const TP_BLOCKSOURCE = 14;
    const TP_LITERALSTART = 15;
    const TP_LITERALEND = 16;
    const TP_LITERAL = 17;
    const TP_LDEL = 18;
    const TP_DOLLAR = 19;
    const TP_ID = 20;
    const TP_EQUAL = 21;
    const TP_PTR = 22;
    const TP_LDELIF = 23;
    const TP_LDELFOR = 24;
    const TP_SEMICOLON = 25;
    const TP_INCDEC = 26;
    const TP_TO = 27;
    const TP_STEP = 28;
    const TP_LDELFOREACH = 29;
    const TP_SPACE = 30;
    const TP_AS = 31;
    const TP_APTR = 32;
    const TP_LDELSETFILTER = 33;
    const TP_SMARTYBLOCKCHILDPARENT = 34;
    const TP_LDELSLASH = 35;
    const TP_ATTR = 36;
    const TP_INTEGER = 37;
    const TP_COMMA = 38;
    const TP_OPENP = 39;
    const TP_CLOSEP = 40;
    const TP_MATH = 41;
    const TP_UNIMATH = 42;
    const TP_ANDSYM = 43;
    const TP_ISIN = 44;
    const TP_ISDIVBY = 45;
    const TP_ISNOTDIVBY = 46;
    const TP_ISEVEN = 47;
    const TP_ISNOTEVEN = 48;
    const TP_ISEVENBY = 49;
    const TP_ISNOTEVENBY = 50;
    const TP_ISODD = 51;
    const TP_ISNOTODD = 52;
    const TP_ISODDBY = 53;
    const TP_ISNOTODDBY = 54;
    const TP_INSTANCEOF = 55;
    const TP_QMARK = 56;
    const TP_NOT = 57;
    const TP_TYPECAST = 58;
    const TP_HEX = 59;
    const TP_DOT = 60;
    const TP_SINGLEQUOTESTRING = 61;
    const TP_DOUBLECOLON = 62;
    const TP_NAMESPACE = 63;
    const TP_AT = 64;
    const TP_HATCH = 65;
    const TP_OPENB = 66;
    const TP_CLOSEB = 67;
    const TP_EQUALS = 68;
    const TP_NOTEQUALS = 69;
    const TP_GREATERTHAN = 70;
    const TP_LESSTHAN = 71;
    const TP_GREATEREQUAL = 72;
    const TP_LESSEQUAL = 73;
    const TP_IDENTITY = 74;
    const TP_NONEIDENTITY = 75;
    const TP_MOD = 76;
    const TP_LAND = 77;
    const TP_LOR = 78;
    const TP_LXOR = 79;
    const TP_QUOTE = 80;
    const TP_BACKTICK = 81;
    const TP_DOLLARID = 82;
    const YY_NO_ACTION = 572;
    const YY_ACCEPT_ACTION = 571;
    const YY_ERROR_ACTION = 570;

    const YY_SZ_ACTTAB = 2478;
    static public $yy_action = array(
        220, 281, 284, 293, 294, 305, 301, 280, 268, 269,
        275, 263, 196, 201, 324, 10, 288, 231, 283, 241,
        7, 107, 39, 157, 17, 157, 132, 37, 204, 42,
        261, 25, 256, 349, 14, 27, 24, 140, 297, 279,
        46, 49, 47, 45, 20, 26, 337, 340, 31, 30,
        341, 350, 29, 18, 220, 299, 334, 571, 91, 289,
        231, 283, 241, 137, 220, 137, 192, 351, 360, 359,
        362, 363, 357, 355, 336, 335, 317, 316, 318, 139,
        220, 43, 433, 42, 220, 220, 427, 430, 485, 27,
        44, 271, 136, 314, 46, 49, 47, 45, 20, 26,
        337, 340, 31, 30, 341, 350, 29, 18, 220, 433,
        243, 485, 21, 42, 430, 433, 196, 353, 315, 27,
        430, 351, 360, 359, 362, 363, 357, 355, 336, 335,
        317, 316, 318, 4, 328, 248, 310, 42, 103, 34,
        122, 187, 35, 27, 300, 485, 348, 487, 46, 49,
        47, 45, 20, 26, 337, 340, 31, 30, 341, 350,
        29, 18, 220, 93, 220, 327, 238, 5, 485, 25,
        487, 349, 40, 339, 157, 351, 360, 359, 362, 363,
        357, 355, 336, 335, 317, 316, 318, 234, 328, 333,
        104, 169, 220, 42, 433, 25, 311, 349, 40, 27,
        330, 487, 46, 49, 47, 45, 20, 26, 337, 340,
        31, 30, 341, 350, 29, 18, 220, 93, 207, 181,
        304, 433, 190, 324, 487, 109, 321, 433, 330, 351,
        360, 359, 362, 363, 357, 355, 336, 335, 317, 316,
        318, 249, 329, 106, 176, 220, 203, 390, 247, 25,
        199, 349, 25, 330, 349, 245, 46, 49, 47, 45,
        20, 26, 337, 340, 31, 30, 341, 350, 29, 18,
        220, 207, 270, 200, 42, 232, 233, 218, 207, 364,
        27, 136, 229, 351, 360, 359, 362, 363, 357, 355,
        336, 335, 317, 316, 318, 251, 99, 167, 249, 179,
        364, 213, 198, 42, 189, 95, 330, 9, 330, 27,
        46, 49, 47, 45, 20, 26, 337, 340, 31, 30,
        341, 350, 29, 18, 207, 220, 203, 103, 497, 2,
        207, 485, 207, 486, 497, 197, 324, 351, 360, 359,
        362, 363, 357, 355, 336, 335, 317, 316, 318, 194,
        38, 328, 125, 35, 485, 346, 486, 35, 220, 354,
        395, 220, 44, 144, 487, 46, 49, 47, 45, 20,
        26, 337, 340, 31, 30, 341, 350, 29, 18, 220,
        93, 276, 159, 142, 25, 356, 254, 487, 352, 257,
        247, 330, 351, 360, 359, 362, 363, 357, 355, 336,
        335, 317, 316, 318, 338, 328, 220, 174, 172, 33,
        25, 25, 225, 349, 255, 252, 330, 330, 487, 46,
        49, 47, 45, 20, 26, 337, 340, 31, 30, 341,
        350, 29, 18, 220, 203, 203, 175, 15, 32, 202,
        184, 487, 338, 118, 27, 330, 351, 360, 359, 362,
        363, 357, 355, 336, 335, 317, 316, 318, 338, 295,
        273, 171, 25, 193, 230, 170, 25, 147, 246, 220,
        330, 292, 113, 46, 49, 47, 45, 20, 26, 337,
        340, 31, 30, 341, 350, 29, 18, 220, 295, 206,
        250, 207, 232, 228, 160, 232, 298, 101, 98, 342,
        351, 360, 359, 362, 363, 357, 355, 336, 335, 317,
        316, 318, 234, 295, 295, 166, 264, 162, 121, 338,
        257, 108, 287, 147, 330, 343, 112, 46, 49, 47,
        45, 20, 26, 337, 340, 31, 30, 341, 350, 29,
        18, 220, 295, 150, 183, 272, 331, 36, 123, 143,
        120, 323, 134, 330, 351, 360, 359, 362, 363, 357,
        355, 336, 335, 317, 316, 318, 338, 178, 295, 265,
        235, 236, 163, 130, 12, 303, 330, 39, 267, 302,
        97, 46, 49, 47, 45, 20, 26, 337, 340, 31,
        30, 341, 350, 29, 18, 220, 295, 277, 164, 296,
        4, 285, 291, 11, 3, 133, 131, 330, 351, 360,
        359, 362, 363, 357, 355, 336, 335, 317, 316, 318,
        338, 338, 161, 195, 312, 304, 168, 203, 165, 338,
        361, 13, 306, 242, 278, 46, 49, 47, 45, 20,
        26, 337, 340, 31, 30, 341, 350, 29, 18, 220,
        105, 205, 119, 358, 334, 185, 334, 334, 100, 158,
        117, 334, 351, 360, 359, 362, 363, 357, 355, 336,
        335, 317, 316, 318, 295, 295, 295, 334, 334, 334,
        334, 334, 334, 334, 334, 334, 334, 334, 157, 46,
        49, 47, 45, 20, 26, 337, 340, 31, 30, 341,
        350, 29, 18, 220, 41, 334, 334, 334, 334, 334,
        334, 334, 334, 334, 334, 334, 351, 360, 359, 362,
        363, 357, 355, 336, 335, 317, 316, 318, 137, 334,
        334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        334, 334, 334, 46, 49, 47, 45, 20, 26, 337,
        340, 31, 30, 341, 350, 29, 18, 220, 334, 334,
        334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        351, 360, 359, 362, 363, 357, 355, 336, 335, 317,
        316, 318, 334, 334, 334, 334, 334, 334, 334, 334,
        334, 334, 334, 334, 334, 334, 334, 46, 49, 47,
        45, 20, 26, 337, 340, 31, 30, 341, 350, 29,
        18, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        334, 334, 334, 334, 351, 360, 359, 362, 363, 357,
        355, 336, 335, 317, 316, 318, 334, 334, 334, 46,
        49, 47, 45, 20, 26, 337, 340, 31, 30, 341,
        350, 29, 18, 334, 334, 334, 334, 334, 334, 334,
        334, 334, 334, 334, 334, 334, 351, 360, 359, 362,
        363, 357, 355, 336, 335, 317, 316, 318, 334, 334,
        334, 322, 334, 334, 334, 10, 135, 212, 8, 334,
        7, 107, 244, 7, 107, 151, 132, 156, 334, 132,
        261, 138, 256, 261, 260, 256, 28, 313, 320, 50,
        274, 334, 307, 215, 217, 286, 262, 334, 307, 25,
        334, 349, 334, 151, 51, 48, 290, 259, 266, 334,
        222, 42, 103, 1, 344, 239, 157, 27, 334, 334,
        307, 334, 191, 10, 126, 92, 334, 96, 7, 107,
        326, 16, 332, 334, 132, 22, 19, 334, 261, 347,
        256, 334, 260, 334, 28, 191, 182, 50, 334, 334,
        207, 334, 334, 334, 213, 330, 334, 334, 22, 19,
        9, 334, 51, 48, 290, 259, 266, 334, 222, 334,
        103, 1, 334, 207, 334, 334, 334, 322, 334, 334,
        334, 10, 135, 209, 8, 96, 7, 107, 334, 7,
        107, 334, 132, 334, 334, 132, 261, 334, 256, 261,
        221, 256, 28, 334, 334, 50, 334, 334, 334, 334,
        334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        51, 48, 290, 259, 266, 334, 222, 334, 103, 1,
        220, 334, 400, 334, 431, 334, 334, 334, 334, 10,
        136, 219, 334, 96, 7, 107, 325, 16, 332, 334,
        132, 258, 240, 334, 261, 334, 256, 334, 260, 42,
        23, 431, 334, 50, 334, 27, 334, 431, 485, 334,
        485, 334, 334, 334, 334, 334, 334, 334, 51, 48,
        290, 259, 266, 244, 222, 334, 103, 1, 155, 334,
        334, 485, 138, 485, 334, 334, 334, 10, 135, 219,
        334, 96, 7, 107, 215, 217, 286, 262, 132, 307,
        334, 25, 261, 349, 256, 334, 260, 334, 28, 334,
        334, 50, 334, 42, 334, 253, 334, 334, 334, 27,
        334, 334, 334, 334, 334, 334, 51, 48, 290, 259,
        266, 334, 222, 334, 103, 1, 334, 334, 334, 334,
        334, 334, 334, 334, 334, 10, 135, 216, 334, 96,
        7, 107, 334, 334, 334, 334, 132, 334, 334, 334,
        261, 334, 256, 334, 260, 334, 28, 191, 186, 50,
        334, 334, 334, 334, 334, 334, 334, 330, 334, 334,
        22, 19, 334, 334, 51, 48, 290, 259, 266, 334,
        222, 334, 103, 1, 334, 207, 334, 334, 334, 25,
        334, 349, 334, 10, 128, 219, 334, 96, 7, 107,
        334, 42, 334, 237, 132, 334, 334, 27, 261, 334,
        256, 334, 260, 334, 6, 334, 334, 50, 334, 334,
        334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        334, 334, 51, 48, 290, 259, 266, 334, 222, 334,
        103, 1, 334, 334, 334, 334, 334, 334, 334, 334,
        334, 10, 124, 219, 334, 96, 7, 107, 334, 334,
        334, 334, 132, 334, 334, 334, 261, 334, 256, 334,
        260, 334, 28, 334, 334, 50, 334, 334, 334, 334,
        334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        51, 48, 290, 259, 266, 334, 222, 334, 103, 1,
        334, 334, 334, 334, 334, 334, 334, 334, 334, 10,
        135, 208, 334, 96, 7, 107, 334, 334, 334, 334,
        132, 334, 334, 334, 261, 334, 256, 334, 260, 334,
        28, 334, 334, 50, 334, 334, 334, 334, 334, 334,
        334, 334, 334, 334, 334, 334, 334, 334, 51, 48,
        290, 259, 266, 334, 222, 334, 103, 1, 334, 334,
        334, 334, 334, 334, 334, 334, 334, 10, 136, 219,
        334, 96, 7, 107, 334, 334, 334, 334, 132, 334,
        334, 334, 261, 334, 256, 334, 260, 334, 23, 334,
        334, 50, 334, 334, 334, 475, 334, 334, 334, 334,
        334, 334, 334, 334, 334, 334, 51, 48, 290, 259,
        266, 334, 222, 334, 103, 334, 244, 475, 334, 475,
        475, 129, 475, 475, 80, 138, 334, 334, 475, 96,
        475, 485, 475, 282, 319, 334, 334, 214, 217, 286,
        262, 334, 307, 334, 334, 334, 334, 334, 334, 334,
        334, 334, 227, 309, 485, 334, 334, 244, 334, 475,
        334, 334, 149, 334, 334, 70, 138, 334, 334, 334,
        334, 334, 334, 475, 282, 319, 334, 334, 214, 217,
        286, 262, 334, 307, 334, 334, 334, 334, 334, 334,
        224, 334, 334, 334, 244, 334, 334, 334, 334, 149,
        334, 334, 70, 138, 334, 334, 334, 334, 334, 334,
        334, 282, 319, 334, 334, 214, 217, 286, 262, 334,
        307, 244, 334, 334, 334, 334, 149, 223, 334, 70,
        138, 334, 334, 334, 334, 334, 334, 334, 282, 319,
        334, 244, 214, 217, 286, 262, 149, 307, 334, 54,
        115, 141, 334, 334, 226, 334, 334, 334, 282, 319,
        334, 244, 214, 217, 286, 262, 149, 307, 334, 66,
        115, 228, 334, 334, 334, 334, 334, 334, 282, 319,
        334, 334, 214, 217, 286, 262, 334, 307, 334, 334,
        244, 334, 334, 334, 334, 129, 334, 334, 80, 138,
        334, 334, 334, 334, 334, 334, 334, 282, 319, 334,
        334, 214, 217, 286, 262, 244, 307, 334, 334, 334,
        149, 334, 334, 62, 138, 334, 244, 308, 334, 334,
        334, 149, 282, 319, 63, 138, 214, 217, 286, 262,
        334, 307, 334, 282, 319, 334, 244, 214, 217, 286,
        262, 149, 307, 334, 86, 138, 334, 244, 334, 334,
        334, 334, 149, 282, 319, 88, 138, 214, 217, 286,
        262, 334, 307, 334, 282, 319, 334, 334, 214, 217,
        286, 262, 334, 307, 334, 334, 244, 334, 334, 334,
        334, 149, 334, 334, 89, 138, 334, 334, 334, 334,
        334, 334, 334, 282, 319, 334, 334, 214, 217, 286,
        262, 244, 307, 334, 334, 334, 149, 334, 334, 64,
        138, 334, 244, 334, 334, 334, 334, 149, 282, 319,
        83, 138, 214, 217, 286, 262, 334, 307, 334, 282,
        319, 334, 244, 214, 217, 286, 262, 149, 307, 334,
        59, 138, 334, 244, 334, 334, 334, 334, 94, 282,
        319, 53, 116, 214, 217, 286, 262, 334, 307, 334,
        282, 319, 334, 334, 210, 217, 286, 262, 334, 307,
        334, 334, 244, 334, 334, 334, 334, 149, 334, 334,
        85, 138, 334, 334, 334, 334, 334, 334, 334, 282,
        319, 334, 334, 214, 217, 286, 262, 244, 307, 334,
        334, 334, 149, 334, 334, 61, 138, 334, 244, 334,
        334, 334, 334, 149, 282, 319, 60, 138, 214, 217,
        286, 262, 334, 307, 334, 282, 319, 334, 244, 214,
        217, 286, 262, 94, 307, 334, 57, 116, 334, 244,
        334, 334, 334, 334, 149, 282, 319, 71, 138, 214,
        217, 286, 262, 334, 307, 334, 282, 319, 334, 334,
        214, 217, 286, 262, 334, 307, 334, 334, 244, 334,
        334, 334, 334, 149, 334, 334, 87, 138, 334, 334,
        334, 334, 334, 334, 334, 282, 319, 334, 334, 214,
        217, 286, 262, 244, 307, 334, 334, 334, 149, 334,
        334, 68, 138, 334, 244, 334, 334, 334, 334, 149,
        282, 319, 67, 138, 214, 217, 286, 262, 334, 307,
        334, 282, 319, 334, 244, 214, 217, 286, 262, 149,
        307, 334, 76, 138, 334, 244, 334, 334, 334, 334,
        149, 282, 319, 58, 138, 214, 217, 286, 262, 334,
        307, 334, 282, 319, 334, 334, 214, 217, 286, 262,
        334, 307, 334, 334, 244, 334, 334, 334, 334, 149,
        334, 334, 84, 138, 334, 334, 334, 334, 334, 334,
        334, 282, 319, 334, 334, 214, 217, 286, 262, 244,
        307, 334, 334, 334, 149, 334, 334, 90, 138, 334,
        244, 334, 334, 334, 334, 114, 282, 319, 72, 138,
        214, 217, 286, 262, 334, 307, 334, 282, 319, 334,
        244, 214, 217, 286, 262, 149, 307, 334, 66, 138,
        334, 244, 334, 334, 334, 334, 149, 282, 319, 79,
        138, 214, 217, 286, 262, 334, 307, 334, 282, 319,
        334, 334, 214, 217, 286, 262, 334, 307, 334, 334,
        244, 334, 334, 334, 334, 149, 334, 334, 75, 138,
        334, 334, 334, 334, 334, 334, 334, 282, 319, 334,
        334, 214, 217, 286, 262, 244, 307, 334, 334, 334,
        149, 334, 334, 82, 138, 334, 244, 334, 334, 334,
        334, 149, 282, 319, 81, 138, 214, 217, 286, 262,
        334, 307, 334, 282, 319, 334, 244, 214, 217, 286,
        262, 149, 307, 334, 77, 138, 334, 244, 334, 334,
        334, 334, 149, 282, 319, 78, 138, 214, 217, 286,
        262, 334, 307, 334, 282, 319, 334, 334, 214, 217,
        286, 262, 334, 307, 334, 334, 244, 334, 334, 334,
        334, 127, 334, 334, 56, 138, 334, 334, 334, 334,
        334, 334, 334, 282, 319, 334, 334, 214, 217, 286,
        262, 244, 307, 334, 334, 334, 149, 334, 334, 52,
        138, 334, 244, 334, 334, 334, 334, 149, 282, 319,
        65, 138, 214, 217, 286, 262, 334, 307, 334, 282,
        319, 334, 244, 211, 217, 286, 262, 111, 307, 334,
        73, 138, 334, 244, 334, 334, 334, 334, 149, 282,
        319, 74, 138, 214, 217, 286, 262, 334, 307, 334,
        282, 319, 334, 334, 214, 217, 286, 262, 334, 307,
        334, 334, 244, 334, 334, 334, 334, 149, 334, 334,
        55, 138, 334, 334, 334, 334, 334, 334, 334, 282,
        319, 334, 334, 214, 217, 286, 262, 244, 307, 334,
        334, 334, 110, 334, 334, 69, 138, 244, 334, 334,
        334, 334, 152, 334, 282, 319, 138, 244, 214, 217,
        286, 262, 146, 307, 334, 345, 138, 334, 215, 217,
        286, 262, 334, 307, 334, 334, 334, 244, 215, 217,
        286, 262, 145, 307, 244, 334, 138, 334, 334, 154,
        334, 334, 334, 138, 334, 334, 334, 334, 215, 217,
        286, 262, 334, 307, 334, 215, 217, 286, 262, 244,
        307, 334, 334, 334, 153, 334, 334, 244, 138, 334,
        334, 334, 148, 334, 334, 334, 138, 334, 334, 334,
        215, 217, 286, 262, 334, 307, 102, 173, 215, 217,
        286, 262, 334, 307, 334, 334, 330, 334, 334, 22,
        19, 334, 191, 188, 334, 334, 334, 191, 177, 191,
        180, 334, 330, 334, 207, 22, 19, 330, 334, 330,
        22, 19, 22, 19, 334, 334, 334, 334, 334, 334,
        207, 334, 334, 334, 334, 207, 334, 207,
    );
    static public $yy_lookahead = array(
        1, 4, 5, 6, 7, 8, 9, 10, 11, 12,
        13, 14, 15, 117, 118, 18, 86, 87, 88, 89,
        23, 24, 21, 22, 21, 22, 29, 28, 20, 30,
        33, 18, 35, 20, 21, 36, 18, 19, 20, 26,
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        51, 52, 53, 54, 1, 37, 3, 84, 85, 86,
        87, 88, 89, 62, 1, 62, 25, 68, 69, 70,
        71, 72, 73, 74, 75, 76, 77, 78, 79, 38,
        1, 32, 3, 30, 1, 1, 3, 3, 39, 36,
        2, 20, 19, 20, 41, 42, 43, 44, 45, 46,
        47, 48, 49, 50, 51, 52, 53, 54, 1, 30,
        31, 62, 18, 30, 30, 36, 15, 16, 17, 36,
        36, 68, 69, 70, 71, 72, 73, 74, 75, 76,
        77, 78, 79, 39, 26, 64, 63, 30, 65, 18,
        19, 20, 38, 36, 40, 39, 118, 39, 41, 42,
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        53, 54, 1, 55, 1, 3, 60, 38, 62, 18,
        62, 20, 21, 67, 22, 68, 69, 70, 71, 72,
        73, 74, 75, 76, 77, 78, 79, 87, 26, 81,
        93, 94, 1, 30, 3, 18, 67, 20, 21, 36,
        103, 39, 41, 42, 43, 44, 45, 46, 47, 48,
        49, 50, 51, 52, 53, 54, 1, 55, 121, 94,
        115, 30, 117, 118, 62, 125, 126, 36, 103, 68,
        69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
        79, 64, 81, 93, 94, 1, 121, 3, 2, 18,
        93, 20, 18, 103, 20, 40, 41, 42, 43, 44,
        45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
        1, 121, 3, 102, 30, 96, 97, 98, 121, 122,
        36, 19, 20, 68, 69, 70, 71, 72, 73, 74,
        75, 76, 77, 78, 79, 64, 93, 94, 64, 94,
        122, 60, 93, 30, 93, 20, 103, 66, 103, 36,
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        51, 52, 53, 54, 121, 1, 121, 65, 60, 39,
        121, 39, 121, 39, 66, 117, 118, 68, 69, 70,
        71, 72, 73, 74, 75, 76, 77, 78, 79, 25,
        21, 26, 62, 38, 62, 40, 62, 38, 1, 40,
        3, 1, 2, 19, 39, 41, 42, 43, 44, 45,
        46, 47, 48, 49, 50, 51, 52, 53, 54, 1,
        55, 3, 94, 39, 18, 88, 20, 62, 91, 60,
        2, 103, 68, 69, 70, 71, 72, 73, 74, 75,
        76, 77, 78, 79, 116, 26, 1, 94, 94, 21,
        18, 18, 20, 20, 19, 20, 103, 103, 39, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
        52, 53, 54, 1, 121, 121, 94, 32, 30, 102,
        114, 62, 116, 100, 36, 103, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 116, 116,
        112, 94, 18, 93, 20, 114, 18, 119, 20, 1,
        103, 37, 100, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 52, 53, 54, 1, 116, 3,
        22, 121, 96, 97, 114, 96, 97, 100, 100, 67,
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        78, 79, 87, 116, 116, 94, 112, 114, 20, 116,
        60, 102, 37, 119, 103, 67, 100, 41, 42, 43,
        44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 1, 116, 20, 94, 3, 3, 27, 19, 19,
        19, 126, 100, 103, 68, 69, 70, 71, 72, 73,
        74, 75, 76, 77, 78, 79, 116, 94, 116, 20,
        20, 31, 65, 19, 56, 20, 103, 21, 11, 40,
        100, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 52, 53, 54, 1, 116, 20, 94, 20,
        39, 20, 3, 2, 39, 19, 101, 103, 68, 69,
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
        116, 116, 65, 20, 103, 115, 114, 121, 114, 116,
        119, 99, 30, 99, 40, 41, 42, 43, 44, 45,
        46, 47, 48, 49, 50, 51, 52, 53, 54, 1,
        114, 3, 90, 16, 127, 114, 127, 127, 100, 100,
        100, 127, 68, 69, 70, 71, 72, 73, 74, 75,
        76, 77, 78, 79, 116, 116, 116, 127, 127, 127,
        127, 127, 127, 127, 127, 127, 127, 127, 22, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
        52, 53, 54, 1, 2, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 62, 127,
        127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 52, 53, 54, 1, 127, 127,
        127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
        78, 79, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127, 127, 41, 42, 43,
        44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
        54, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 68, 69, 70, 71, 72, 73,
        74, 75, 76, 77, 78, 79, 127, 127, 127, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
        52, 53, 54, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 127, 127,
        127, 11, 127, 127, 127, 18, 19, 20, 18, 127,
        23, 24, 87, 23, 24, 96, 29, 92, 127, 29,
        33, 96, 35, 33, 37, 35, 39, 108, 109, 42,
        105, 127, 113, 108, 109, 110, 111, 127, 113, 18,
        127, 20, 127, 96, 57, 58, 59, 60, 61, 127,
        63, 30, 65, 66, 67, 108, 22, 36, 127, 127,
        113, 127, 93, 18, 19, 20, 127, 80, 23, 24,
        80, 81, 82, 127, 29, 106, 107, 127, 33, 34,
        35, 127, 37, 127, 39, 93, 94, 42, 127, 127,
        121, 127, 127, 127, 60, 103, 127, 127, 106, 107,
        66, 127, 57, 58, 59, 60, 61, 127, 63, 127,
        65, 66, 127, 121, 127, 127, 127, 11, 127, 127,
        127, 18, 19, 20, 18, 80, 23, 24, 127, 23,
        24, 127, 29, 127, 127, 29, 33, 127, 35, 33,
        37, 35, 39, 127, 127, 42, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        57, 58, 59, 60, 61, 127, 63, 127, 65, 66,
        1, 127, 3, 127, 3, 127, 127, 127, 127, 18,
        19, 20, 127, 80, 23, 24, 80, 81, 82, 127,
        29, 22, 21, 127, 33, 127, 35, 127, 37, 30,
        39, 30, 127, 42, 127, 36, 127, 36, 39, 127,
        39, 127, 127, 127, 127, 127, 127, 127, 57, 58,
        59, 60, 61, 87, 63, 127, 65, 66, 92, 127,
        127, 62, 96, 62, 127, 127, 127, 18, 19, 20,
        127, 80, 23, 24, 108, 109, 110, 111, 29, 113,
        127, 18, 33, 20, 35, 127, 37, 127, 39, 127,
        127, 42, 127, 30, 127, 32, 127, 127, 127, 36,
        127, 127, 127, 127, 127, 127, 57, 58, 59, 60,
        61, 127, 63, 127, 65, 66, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 18, 19, 20, 127, 80,
        23, 24, 127, 127, 127, 127, 29, 127, 127, 127,
        33, 127, 35, 127, 37, 127, 39, 93, 94, 42,
        127, 127, 127, 127, 127, 127, 127, 103, 127, 127,
        106, 107, 127, 127, 57, 58, 59, 60, 61, 127,
        63, 127, 65, 66, 127, 121, 127, 127, 127, 18,
        127, 20, 127, 18, 19, 20, 127, 80, 23, 24,
        127, 30, 127, 32, 29, 127, 127, 36, 33, 127,
        35, 127, 37, 127, 39, 127, 127, 42, 127, 127,
        127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 57, 58, 59, 60, 61, 127, 63, 127,
        65, 66, 127, 127, 127, 127, 127, 127, 127, 127,
        127, 18, 19, 20, 127, 80, 23, 24, 127, 127,
        127, 127, 29, 127, 127, 127, 33, 127, 35, 127,
        37, 127, 39, 127, 127, 42, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        57, 58, 59, 60, 61, 127, 63, 127, 65, 66,
        127, 127, 127, 127, 127, 127, 127, 127, 127, 18,
        19, 20, 127, 80, 23, 24, 127, 127, 127, 127,
        29, 127, 127, 127, 33, 127, 35, 127, 37, 127,
        39, 127, 127, 42, 127, 127, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127, 127, 127, 57, 58,
        59, 60, 61, 127, 63, 127, 65, 66, 127, 127,
        127, 127, 127, 127, 127, 127, 127, 18, 19, 20,
        127, 80, 23, 24, 127, 127, 127, 127, 29, 127,
        127, 127, 33, 127, 35, 127, 37, 127, 39, 127,
        127, 42, 127, 127, 127, 3, 127, 127, 127, 127,
        127, 127, 127, 127, 127, 127, 57, 58, 59, 60,
        61, 127, 63, 127, 65, 127, 87, 25, 127, 27,
        28, 92, 30, 31, 95, 96, 127, 127, 36, 80,
        38, 39, 40, 104, 105, 127, 127, 108, 109, 110,
        111, 127, 113, 127, 127, 127, 127, 127, 127, 127,
        127, 127, 123, 124, 62, 127, 127, 87, 127, 67,
        127, 127, 92, 127, 127, 95, 96, 127, 127, 127,
        127, 127, 127, 81, 104, 105, 127, 127, 108, 109,
        110, 111, 127, 113, 127, 127, 127, 127, 127, 127,
        120, 127, 127, 127, 87, 127, 127, 127, 127, 92,
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        127, 104, 105, 127, 127, 108, 109, 110, 111, 127,
        113, 87, 127, 127, 127, 127, 92, 120, 127, 95,
        96, 127, 127, 127, 127, 127, 127, 127, 104, 105,
        127, 87, 108, 109, 110, 111, 92, 113, 127, 95,
        96, 97, 127, 127, 120, 127, 127, 127, 104, 105,
        127, 87, 108, 109, 110, 111, 92, 113, 127, 95,
        96, 97, 127, 127, 127, 127, 127, 127, 104, 105,
        127, 127, 108, 109, 110, 111, 127, 113, 127, 127,
        87, 127, 127, 127, 127, 92, 127, 127, 95, 96,
        127, 127, 127, 127, 127, 127, 127, 104, 105, 127,
        127, 108, 109, 110, 111, 87, 113, 127, 127, 127,
        92, 127, 127, 95, 96, 127, 87, 124, 127, 127,
        127, 92, 104, 105, 95, 96, 108, 109, 110, 111,
        127, 113, 127, 104, 105, 127, 87, 108, 109, 110,
        111, 92, 113, 127, 95, 96, 127, 87, 127, 127,
        127, 127, 92, 104, 105, 95, 96, 108, 109, 110,
        111, 127, 113, 127, 104, 105, 127, 127, 108, 109,
        110, 111, 127, 113, 127, 127, 87, 127, 127, 127,
        127, 92, 127, 127, 95, 96, 127, 127, 127, 127,
        127, 127, 127, 104, 105, 127, 127, 108, 109, 110,
        111, 87, 113, 127, 127, 127, 92, 127, 127, 95,
        96, 127, 87, 127, 127, 127, 127, 92, 104, 105,
        95, 96, 108, 109, 110, 111, 127, 113, 127, 104,
        105, 127, 87, 108, 109, 110, 111, 92, 113, 127,
        95, 96, 127, 87, 127, 127, 127, 127, 92, 104,
        105, 95, 96, 108, 109, 110, 111, 127, 113, 127,
        104, 105, 127, 127, 108, 109, 110, 111, 127, 113,
        127, 127, 87, 127, 127, 127, 127, 92, 127, 127,
        95, 96, 127, 127, 127, 127, 127, 127, 127, 104,
        105, 127, 127, 108, 109, 110, 111, 87, 113, 127,
        127, 127, 92, 127, 127, 95, 96, 127, 87, 127,
        127, 127, 127, 92, 104, 105, 95, 96, 108, 109,
        110, 111, 127, 113, 127, 104, 105, 127, 87, 108,
        109, 110, 111, 92, 113, 127, 95, 96, 127, 87,
        127, 127, 127, 127, 92, 104, 105, 95, 96, 108,
        109, 110, 111, 127, 113, 127, 104, 105, 127, 127,
        108, 109, 110, 111, 127, 113, 127, 127, 87, 127,
        127, 127, 127, 92, 127, 127, 95, 96, 127, 127,
        127, 127, 127, 127, 127, 104, 105, 127, 127, 108,
        109, 110, 111, 87, 113, 127, 127, 127, 92, 127,
        127, 95, 96, 127, 87, 127, 127, 127, 127, 92,
        104, 105, 95, 96, 108, 109, 110, 111, 127, 113,
        127, 104, 105, 127, 87, 108, 109, 110, 111, 92,
        113, 127, 95, 96, 127, 87, 127, 127, 127, 127,
        92, 104, 105, 95, 96, 108, 109, 110, 111, 127,
        113, 127, 104, 105, 127, 127, 108, 109, 110, 111,
        127, 113, 127, 127, 87, 127, 127, 127, 127, 92,
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        127, 104, 105, 127, 127, 108, 109, 110, 111, 87,
        113, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        87, 127, 127, 127, 127, 92, 104, 105, 95, 96,
        108, 109, 110, 111, 127, 113, 127, 104, 105, 127,
        87, 108, 109, 110, 111, 92, 113, 127, 95, 96,
        127, 87, 127, 127, 127, 127, 92, 104, 105, 95,
        96, 108, 109, 110, 111, 127, 113, 127, 104, 105,
        127, 127, 108, 109, 110, 111, 127, 113, 127, 127,
        87, 127, 127, 127, 127, 92, 127, 127, 95, 96,
        127, 127, 127, 127, 127, 127, 127, 104, 105, 127,
        127, 108, 109, 110, 111, 87, 113, 127, 127, 127,
        92, 127, 127, 95, 96, 127, 87, 127, 127, 127,
        127, 92, 104, 105, 95, 96, 108, 109, 110, 111,
        127, 113, 127, 104, 105, 127, 87, 108, 109, 110,
        111, 92, 113, 127, 95, 96, 127, 87, 127, 127,
        127, 127, 92, 104, 105, 95, 96, 108, 109, 110,
        111, 127, 113, 127, 104, 105, 127, 127, 108, 109,
        110, 111, 127, 113, 127, 127, 87, 127, 127, 127,
        127, 92, 127, 127, 95, 96, 127, 127, 127, 127,
        127, 127, 127, 104, 105, 127, 127, 108, 109, 110,
        111, 87, 113, 127, 127, 127, 92, 127, 127, 95,
        96, 127, 87, 127, 127, 127, 127, 92, 104, 105,
        95, 96, 108, 109, 110, 111, 127, 113, 127, 104,
        105, 127, 87, 108, 109, 110, 111, 92, 113, 127,
        95, 96, 127, 87, 127, 127, 127, 127, 92, 104,
        105, 95, 96, 108, 109, 110, 111, 127, 113, 127,
        104, 105, 127, 127, 108, 109, 110, 111, 127, 113,
        127, 127, 87, 127, 127, 127, 127, 92, 127, 127,
        95, 96, 127, 127, 127, 127, 127, 127, 127, 104,
        105, 127, 127, 108, 109, 110, 111, 87, 113, 127,
        127, 127, 92, 127, 127, 95, 96, 87, 127, 127,
        127, 127, 92, 127, 104, 105, 96, 87, 108, 109,
        110, 111, 92, 113, 127, 105, 96, 127, 108, 109,
        110, 111, 127, 113, 127, 127, 127, 87, 108, 109,
        110, 111, 92, 113, 87, 127, 96, 127, 127, 92,
        127, 127, 127, 96, 127, 127, 127, 127, 108, 109,
        110, 111, 127, 113, 127, 108, 109, 110, 111, 87,
        113, 127, 127, 127, 92, 127, 127, 87, 96, 127,
        127, 127, 92, 127, 127, 127, 96, 127, 127, 127,
        108, 109, 110, 111, 127, 113, 93, 94, 108, 109,
        110, 111, 127, 113, 127, 127, 103, 127, 127, 106,
        107, 127, 93, 94, 127, 127, 127, 93, 94, 93,
        94, 127, 103, 127, 121, 106, 107, 103, 127, 103,
        106, 107, 106, 107, 127, 127, 127, 127, 127, 127,
        121, 127, 127, 127, 127, 121, 127, 121,
    );
    const YY_SHIFT_USE_DFLT = - 4;
    const YY_SHIFT_MAX = 261;
    static public $yy_shift_ofst = array(
        - 3, 1157, 1099, 1099, 1099, 1157, 1215, 1215, 925, 867,
        925, 1331, 1273, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
        1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
        1099, 1099, 983, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
        1099, 1099, 983, 1099, 1041, 1041, 1389, 1389, 1389, 1389,
        1389, 1389, - 1, 53, 107, 107, 107, 107, 107, 486,
        432, 594, 648, 702, 324, 161, 215, 378, 269, 540,
        756, 756, 756, 756, 756, 756, 756, 756, 756, 756,
        756, 756, 756, 756, 756, 756, 756, 756, 756, 798,
        798, - 3, 1049, 73, 244, 163, 870, 1211, 1113, 83,
        901, 901, 83, 262, 163, 914, 163, 344, 360, 986,
        79, 84, 13, 177, 191, 1, 3, 151, 234, 101,
        393, 468, 444, 393, 448, 395, 392, 357, 366, 405,
        393, 273, 408, 393, 393, 366, 393, 395, 666, 344,
        393, 273, 344, 393, 393, 63, 63, 152, 63, 63,
        63, 152, 63, 63, 63, 63, - 4, 121, 231, 273,
        241, 268, 241, 268, 273, 241, 273, 273, 241, 273,
        241, 273, 273, 273, 273, 273, 273, 273, 273, 273,
        273, 273, 273, 273, 241, 241, 273, 94, 273, 63,
        152, 63, 602, 63, 602, 565, 637, 152, 63, 63,
        88, 152, 88, - 4, - 4, - 4, - 4, - 4, 1432, 1051,
        162, 108, 106, 18, 325, 379, 49, 290, 41, 292,
        71, 329, 294, 104, 319, 388, 315, 129, 539, 557,
        565, 599, 556, 520, 543, 458, 529, 530, 550, 507,
        549, 567, 531, 554, 542, 518, 601, 581, 577, 555,
        523, 579, 561, 586, 246, 603, 498, 434, 285, 485,
        460, 8,
    );
    const YY_REDUCE_USE_DFLT = - 105;
    const YY_REDUCE_MAX = 207;
    static public $yy_reduce_ofst = array(
        - 27, 1369, 1474, 1410, 1447, 1543, 1514, 1494, 1706, 1771,
        1791, 1639, 1579, 1664, 1610, 2090, 2155, 1898, 1831, 1599,
        1675, 1695, 1802, 1760, 1856, 1867, 1735, 2175, 1983, 2023,
        1887, 2059, 2240, 2119, 1568, 2079, 2144, 2215, 2186, 2048,
        1927, 1952, 1963, 1994, 805, 2250, 2320, 2287, 2312, 2260,
        1016, 2280, 872, 2333, 1104, 2349, 2354, 2333, 2356, 849,
        849, 849, 849, 849, 849, 849, 849, 849, 849, 849,
        849, 849, 849, 849, 849, 849, 849, 849, 849, 849,
        849, 849, 849, 849, 849, 849, 849, 849, 849, 849,
        849, - 70, 97, 799, 203, 150, 100, 450, 504, 313,
        342, 288, 125, 827, 205, 105, 314, 179, 157, 425,
        211, 211, 505, 326, 211, 218, 218, 326, 326, 297,
        426, 370, 452, 480, 343, 348, 343, 211, 372, 211,
        398, 421, 367, 397, 403, 343, 343, 404, 218, 399,
        559, 473, 396, 558, 560, 211, 211, - 104, 211, 211,
        209, 218, 211, 211, 211, 211, 211, 511, 513, 521,
        510, 514, 510, 512, 521, 510, 521, 521, 510, 521,
        510, 521, 521, 521, 521, 521, 521, 521, 521, 521,
        521, 521, 521, 521, 510, 510, 521, 541, 521, 506,
        28, 506, 532, 506, 534, 536, 562, 28, 506, 506,
        178, 28, 178, 171, 419, 380, 351, 337,
    );
    static public $yyExpectedTokens = array(
        array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 67, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 66, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 80,),
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 63, 65, 80,),
        array(1, 28, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 3, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81,),
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,),
        array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35,),
        array(1, 3, 22, 30, 36, 39, 62,),
        array(19, 20, 63, 65,),
        array(1, 3, 30, 36,),
        array(1, 30, 36,),
        array(11, 18, 23, 24, 29, 33, 35, 80, 81, 82,),
        array(18, 20, 30, 32, 36,),
        array(18, 20, 30, 32, 36,),
        array(1, 3, 30, 36,),
        array(18, 20, 30, 36,),
        array(18, 20, 30, 36,),
        array(1, 3, 30, 36,),
        array(19, 20, 65,),
        array(1, 30, 36,),
        array(22, 60, 66,),
        array(1, 30, 36,),
        array(19, 39,),
        array(1, 2,),
        array(11, 18, 23, 24, 29, 33, 35, 80, 81, 82,),
        array(1, 3, 30, 31, 36,),
        array(1, 3, 30, 36,),
        array(18, 20, 21, 26,),
        array(18, 20, 21, 64,),
        array(1, 3, 30, 36,),
        array(21, 22, 62,),
        array(21, 22, 62,),
        array(18, 20, 21,),
        array(18, 20, 64,),
        array(15, 16, 17,),
        array(18, 20,),
        array(1, 22,),
        array(18, 20,),
        array(18, 20,),
        array(18, 20,),
        array(19, 20,),
        array(18, 20,),
        array(1, 3,),
        array(18, 20,),
        array(1, 32,),
        array(18, 20,),
        array(30, 36,),
        array(30, 36,),
        array(18, 20,),
        array(18, 20,),
        array(18, 20,),
        array(18, 20,),
        array(19, 20,),
        array(22, 62,),
        array(19, 39,),
        array(18, 20,),
        array(30, 36,),
        array(19, 39,),
        array(18, 20,),
        array(18, 20,),
        array(1,),
        array(1,),
        array(22,),
        array(1,),
        array(1,),
        array(1,),
        array(22,),
        array(1,),
        array(1,),
        array(1,),
        array(1,),
        array(),
        array(18, 19, 20,),
        array(18, 20, 64,),
        array(30, 36,),
        array(60, 66,),
        array(60, 66,),
        array(60, 66,),
        array(60, 66,),
        array(30, 36,),
        array(60, 66,),
        array(30, 36,),
        array(30, 36,),
        array(60, 66,),
        array(30, 36,),
        array(60, 66,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(30, 36,),
        array(60, 66,),
        array(60, 66,),
        array(30, 36,),
        array(18, 39,),
        array(30, 36,),
        array(1,),
        array(22,),
        array(1,),
        array(30,),
        array(1,),
        array(30,),
        array(39,),
        array(16,),
        array(22,),
        array(1,),
        array(1,),
        array(2,),
        array(22,),
        array(2,),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(3, 25, 27, 28, 30, 31, 36, 38, 39, 40, 62, 67, 81,),
        array(3, 21, 30, 36, 39, 62,),
        array(3, 26, 39, 55, 62,),
        array(26, 39, 55, 62, 81,),
        array(39, 60, 62, 67,),
        array(18, 19, 20, 37,),
        array(26, 39, 55, 62,),
        array(26, 39, 62,),
        array(32, 39, 62,),
        array(39, 62,),
        array(25, 38,),
        array(39, 62,),
        array(20, 64,),
        array(21, 60,),
        array(39, 62,),
        array(38, 40,),
        array(38, 40,),
        array(2, 21,),
        array(38, 40,),
        array(38, 67,),
        array(40,),
        array(65,),
        array(39,),
        array(3,),
        array(21,),
        array(27,),
        array(3,),
        array(67,),
        array(19,),
        array(19,),
        array(20,),
        array(65,),
        array(20,),
        array(11,),
        array(19,),
        array(19,),
        array(3,),
        array(56,),
        array(2,),
        array(20,),
        array(20,),
        array(20,),
        array(20,),
        array(20,),
        array(39,),
        array(19,),
        array(2,),
        array(20,),
        array(20,),
        array(37,),
        array(20,),
        array(37,),
        array(60,),
        array(20,),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
        array(),
    );
    static public $yy_default = array(
        368, 553, 524, 524, 524, 570, 570, 570, 570, 570,
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        570, 570, 427, 570, 404, 427, 396, 427, 427, 570,
        570, 570, 570, 570, 570, 570, 570, 570, 570, 432,
        523, 448, 432, 429, 434, 460, 457, 522, 554, 555,
        556, 456, 438, 452, 437, 453, 451, 461, 409, 463,
        464, 365, 475, 570, 440, 427, 570, 427, 427, 482,
        427, 427, 447, 570, 427, 536, 427, 570, 418, 570,
        440, 440, 570, 497, 440, 488, 488, 497, 497, 570,
        570, 421, 570, 570, 570, 570, 570, 440, 570, 440,
        570, 427, 427, 570, 497, 570, 570, 570, 488, 570,
        570, 406, 570, 570, 570, 467, 444, 533, 443, 440,
        423, 488, 450, 468, 445, 466, 531, 570, 498, 415,
        516, 491, 515, 493, 414, 492, 408, 392, 494, 399,
        517, 413, 403, 394, 391, 417, 402, 397, 407, 401,
        398, 393, 411, 416, 495, 514, 405, 497, 412, 482,
        537, 447, 569, 422, 569, 497, 387, 511, 424, 419,
        525, 534, 526, 530, 530, 497, 497, 530, 442, 475,
        465, 465, 475, 570, 465, 465, 475, 570, 570, 475,
        570, 471, 483, 570, 570, 509, 570, 570, 570, 570,
        509, 570, 570, 435, 570, 570, 570, 570, 570, 570,
        570, 378, 570, 570, 570, 477, 509, 570, 570, 570,
        570, 570, 535, 570, 509, 570, 570, 473, 570, 570,
        471, 570, 479, 383, 480, 428, 478, 380, 379, 381,
        502, 528, 481, 484, 532, 382, 510, 527, 477, 410,
        377, 370, 441, 371, 372, 442, 476, 474, 367, 366,
        470, 369, 472, 373, 374, 507, 499, 500, 436, 501,
        520, 376, 439, 489, 496, 375, 568, 490, 552, 551,
        486, 550, 425, 487, 485, 389, 548, 547, 549, 446,
        462, 560, 567, 559, 512, 558, 557, 564, 469, 562,
        426, 566, 563, 561, 565, 546, 545, 454, 508, 503,
        455, 458, 505, 504, 506, 449, 519, 420, 513, 509,
        459, 538, 386, 385, 521, 544, 388, 543, 384, 540,
        539, 518, 541, 542, 529,
    );
    const YYNOCODE = 128;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 365;
    const YYNRULE = 205;
    const YYERRORSYMBOL = 83;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array();

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
        '$', 'VERT', 'COLON', 'RDEL',
        'COMMENT', 'PHPSTARTTAG', 'PHPENDTAG', 'PHPENDSCRIPT',
        'ASPSTARTTAG', 'ASPENDTAG', 'XMLTAG', 'TEXT',
        'STRIPON', 'STRIPOFF', 'BLOCKSOURCE', 'LITERALSTART',
        'LITERALEND', 'LITERAL', 'LDEL', 'DOLLAR',
        'ID', 'EQUAL', 'PTR', 'LDELIF',
        'LDELFOR', 'SEMICOLON', 'INCDEC', 'TO',
        'STEP', 'LDELFOREACH', 'SPACE', 'AS',
        'APTR', 'LDELSETFILTER', 'SMARTYBLOCKCHILDPARENT', 'LDELSLASH',
        'ATTR', 'INTEGER', 'COMMA', 'OPENP',
        'CLOSEP', 'MATH', 'UNIMATH', 'ANDSYM',
        'ISIN', 'ISDIVBY', 'ISNOTDIVBY', 'ISEVEN',
        'ISNOTEVEN', 'ISEVENBY', 'ISNOTEVENBY', 'ISODD',
        'ISNOTODD', 'ISODDBY', 'ISNOTODDBY', 'INSTANCEOF',
        'QMARK', 'NOT', 'TYPECAST', 'HEX',
        'DOT', 'SINGLEQUOTESTRING', 'DOUBLECOLON', 'NAMESPACE',
        'AT', 'HATCH', 'OPENB', 'CLOSEB',
        'EQUALS', 'NOTEQUALS', 'GREATERTHAN', 'LESSTHAN',
        'GREATEREQUAL', 'LESSEQUAL', 'IDENTITY', 'NONEIDENTITY',
        'MOD', 'LAND', 'LOR', 'LXOR',
        'QUOTE', 'BACKTICK', 'DOLLARID', 'error',
        'start', 'template', 'template_element', 'smartytag',
        'literal', 'text_content', 'literal_elements', 'literal_element',
        'value', 'modifierlist', 'attributes', 'expr',
        'varindexed', 'statement', 'statements', 'optspace',
        'varvar', 'foraction', 'modparameters', 'attribute',
        'ternary', 'array', 'ifcond', 'lop',
        'variable', 'ns1', 'function', 'doublequoted_with_quotes',
        'static_class_access', 'object', 'arrayindex', 'indexdef',
        'varvarele', 'objectchain', 'objectelement', 'method',
        'params', 'modifier', 'modparameter', 'arrayelements',
        'arrayelement', 'doublequoted', 'doublequotedcontent',
    );

    public static $yyRuleName = array(
        "start ::= template",
        "template ::= template_element",
        "template ::= template template_element",
        "template ::=",
        "template_element ::= smartytag RDEL",
        "template_element ::= COMMENT",
        "template_element ::= literal",
        "template_element ::= PHPSTARTTAG",
        "template_element ::= PHPENDTAG",
        "template_element ::= PHPENDSCRIPT",
        "template_element ::= ASPSTARTTAG",
        "template_element ::= ASPENDTAG",
        "template_element ::= XMLTAG",
        "template_element ::= text_content",
        "text_content ::= TEXT",
        "text_content ::= text_content TEXT",
        "template_element ::= STRIPON",
        "template_element ::= STRIPOFF",
        "template_element ::= BLOCKSOURCE",
        "literal ::= LITERALSTART LITERALEND",
        "literal ::= LITERALSTART literal_elements LITERALEND",
        "literal_elements ::= literal_elements literal_element",
        "literal_elements ::=",
        "literal_element ::= literal",
        "literal_element ::= LITERAL",
        "smartytag ::= LDEL value",
        "smartytag ::= LDEL value modifierlist attributes",
        "smartytag ::= LDEL value attributes",
        "smartytag ::= LDEL expr modifierlist attributes",
        "smartytag ::= LDEL expr attributes",
        "smartytag ::= LDEL DOLLAR ID EQUAL value",
        "smartytag ::= LDEL DOLLAR ID EQUAL expr",
        "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes",
        "smartytag ::= LDEL varindexed EQUAL expr attributes",
        "smartytag ::= LDEL ID attributes",
        "smartytag ::= LDEL ID",
        "smartytag ::= LDEL ID modifierlist attributes",
        "smartytag ::= LDEL ID PTR ID attributes",
        "smartytag ::= LDEL ID PTR ID modifierlist attributes",
        "smartytag ::= LDELIF expr",
        "smartytag ::= LDELIF expr attributes",
        "smartytag ::= LDELIF statement",
        "smartytag ::= LDELIF statement attributes",
        "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes",
        "foraction ::= EQUAL expr",
        "foraction ::= INCDEC",
        "smartytag ::= LDELFOR statement TO expr attributes",
        "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
        "smartytag ::= LDELFOREACH attributes",
        "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes",
        "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes",
        "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes",
        "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes",
        "smartytag ::= LDELSETFILTER ID modparameters",
        "smartytag ::= LDELSETFILTER ID modparameters modifierlist",
        "smartytag ::= LDEL SMARTYBLOCKCHILDPARENT",
        "smartytag ::= LDELSLASH ID",
        "smartytag ::= LDELSLASH ID modifierlist",
        "smartytag ::= LDELSLASH ID PTR ID",
        "smartytag ::= LDELSLASH ID PTR ID modifierlist",
        "attributes ::= attributes attribute",
        "attributes ::= attribute",
        "attributes ::=",
        "attribute ::= SPACE ID EQUAL ID",
        "attribute ::= ATTR expr",
        "attribute ::= ATTR value",
        "attribute ::= SPACE ID",
        "attribute ::= SPACE expr",
        "attribute ::= SPACE value",
        "attribute ::= SPACE INTEGER EQUAL expr",
        "statements ::= statement",
        "statements ::= statements COMMA statement",
        "statement ::= DOLLAR varvar EQUAL expr",
        "statement ::= varindexed EQUAL expr",
        "statement ::= OPENP statement CLOSEP",
        "expr ::= value",
        "expr ::= ternary",
        "expr ::= DOLLAR ID COLON ID",
        "expr ::= expr MATH value",
        "expr ::= expr UNIMATH value",
        "expr ::= expr ANDSYM value",
        "expr ::= array",
        "expr ::= expr modifierlist",
        "expr ::= expr ifcond expr",
        "expr ::= expr ISIN array",
        "expr ::= expr ISIN value",
        "expr ::= expr lop expr",
        "expr ::= expr ISDIVBY expr",
        "expr ::= expr ISNOTDIVBY expr",
        "expr ::= expr ISEVEN",
        "expr ::= expr ISNOTEVEN",
        "expr ::= expr ISEVENBY expr",
        "expr ::= expr ISNOTEVENBY expr",
        "expr ::= expr ISODD",
        "expr ::= expr ISNOTODD",
        "expr ::= expr ISODDBY expr",
        "expr ::= expr ISNOTODDBY expr",
        "expr ::= variable INSTANCEOF ns1",
        "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
        "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
        "value ::= variable",
        "value ::= UNIMATH value",
        "value ::= NOT value",
        "value ::= TYPECAST value",
        "value ::= variable INCDEC",
        "value ::= HEX",
        "value ::= INTEGER",
        "value ::= INTEGER DOT INTEGER",
        "value ::= INTEGER DOT",
        "value ::= DOT INTEGER",
        "value ::= ID",
        "value ::= function",
        "value ::= OPENP expr CLOSEP",
        "value ::= SINGLEQUOTESTRING",
        "value ::= doublequoted_with_quotes",
        "value ::= varindexed DOUBLECOLON static_class_access",
        "value ::= smartytag RDEL",
        "value ::= value modifierlist",
        "value ::= NAMESPACE",
        "value ::= ns1 DOUBLECOLON static_class_access",
        "ns1 ::= ID",
        "ns1 ::= NAMESPACE",
        "ns1 ::= variable",
        "variable ::= varindexed",
        "variable ::= DOLLAR varvar AT ID",
        "variable ::= object",
        "variable ::= HATCH ID HATCH",
        "variable ::= HATCH ID HATCH arrayindex",
        "variable ::= HATCH variable HATCH",
        "variable ::= HATCH variable HATCH arrayindex",
        "varindexed ::= DOLLAR varvar arrayindex",
        "arrayindex ::= arrayindex indexdef",
        "arrayindex ::=",
        "indexdef ::= DOT DOLLAR varvar",
        "indexdef ::= DOT DOLLAR varvar AT ID",
        "indexdef ::= DOT ID",
        "indexdef ::= DOT INTEGER",
        "indexdef ::= DOT LDEL expr RDEL",
        "indexdef ::= OPENB ID CLOSEB",
        "indexdef ::= OPENB ID DOT ID CLOSEB",
        "indexdef ::= OPENB expr CLOSEB",
        "indexdef ::= OPENB CLOSEB",
        "varvar ::= varvarele",
        "varvar ::= varvar varvarele",
        "varvarele ::= ID",
        "varvarele ::= LDEL expr RDEL",
        "object ::= varindexed objectchain",
        "objectchain ::= objectelement",
        "objectchain ::= objectchain objectelement",
        "objectelement ::= PTR ID arrayindex",
        "objectelement ::= PTR DOLLAR varvar arrayindex",
        "objectelement ::= PTR LDEL expr RDEL arrayindex",
        "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
        "objectelement ::= PTR method",
        "function ::= ns1 OPENP params CLOSEP",
        "method ::= ID OPENP params CLOSEP",
        "method ::= DOLLAR ID OPENP params CLOSEP",
        "params ::= params COMMA expr",
        "params ::= expr",
        "params ::=",
        "modifierlist ::= modifierlist modifier modparameters",
        "modifierlist ::= modifier modparameters",
        "modifier ::= VERT AT ID",
        "modifier ::= VERT ID",
        "modparameters ::= modparameters modparameter",
        "modparameters ::=",
        "modparameter ::= COLON value",
        "modparameter ::= COLON array",
        "static_class_access ::= method",
        "static_class_access ::= method objectchain",
        "static_class_access ::= ID",
        "static_class_access ::= DOLLAR ID arrayindex",
        "static_class_access ::= DOLLAR ID arrayindex objectchain",
        "ifcond ::= EQUALS",
        "ifcond ::= NOTEQUALS",
        "ifcond ::= GREATERTHAN",
        "ifcond ::= LESSTHAN",
        "ifcond ::= GREATEREQUAL",
        "ifcond ::= LESSEQUAL",
        "ifcond ::= IDENTITY",
        "ifcond ::= NONEIDENTITY",
        "ifcond ::= MOD",
        "lop ::= LAND",
        "lop ::= LOR",
        "lop ::= LXOR",
        "array ::= OPENB arrayelements CLOSEB",
        "arrayelements ::= arrayelement",
        "arrayelements ::= arrayelements COMMA arrayelement",
        "arrayelements ::=",
        "arrayelement ::= value APTR expr",
        "arrayelement ::= ID APTR expr",
        "arrayelement ::= expr",
        "doublequoted_with_quotes ::= QUOTE QUOTE",
        "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
        "doublequoted ::= doublequoted doublequotedcontent",
        "doublequoted ::= doublequotedcontent",
        "doublequotedcontent ::= BACKTICK variable BACKTICK",
        "doublequotedcontent ::= BACKTICK expr BACKTICK",
        "doublequotedcontent ::= DOLLARID",
        "doublequotedcontent ::= LDEL variable RDEL",
        "doublequotedcontent ::= LDEL expr RDEL",
        "doublequotedcontent ::= smartytag RDEL",
        "doublequotedcontent ::= TEXT",
        "optspace ::= SPACE",
        "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                   $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                   "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx --;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno][1];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno][0]);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                        if (in_array($token,
                                     self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno][0];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno][1];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno][0]);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                        in_array($token, self::$yyExpectedTokens[$nextstate], true)
                    ) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno][0];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                && ($iFallback = self::$yyFallback[$iLookAhead]) != 0
            ) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE, $this->yyTracePrompt . "FALLBACK " .
                                             $this->yyTokenName[$iLookAhead] . " => " .
                                             $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx ++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx --;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 195 "../smarty/lexer/smarty_internal_templateparser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt,
                    $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i ++) {
                fprintf($this->yyTraceFILE, " %s",
                        $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    public static $yyRuleInfo = array(
        array(0 => 84, 1 => 1),
        array(0 => 85, 1 => 1),
        array(0 => 85, 1 => 2),
        array(0 => 85, 1 => 0),
        array(0 => 86, 1 => 2),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 89, 1 => 1),
        array(0 => 89, 1 => 2),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 86, 1 => 1),
        array(0 => 88, 1 => 2),
        array(0 => 88, 1 => 3),
        array(0 => 90, 1 => 2),
        array(0 => 90, 1 => 0),
        array(0 => 91, 1 => 1),
        array(0 => 91, 1 => 1),
        array(0 => 87, 1 => 2),
        array(0 => 87, 1 => 4),
        array(0 => 87, 1 => 3),
        array(0 => 87, 1 => 4),
        array(0 => 87, 1 => 3),
        array(0 => 87, 1 => 5),
        array(0 => 87, 1 => 5),
        array(0 => 87, 1 => 6),
        array(0 => 87, 1 => 5),
        array(0 => 87, 1 => 3),
        array(0 => 87, 1 => 2),
        array(0 => 87, 1 => 4),
        array(0 => 87, 1 => 5),
        array(0 => 87, 1 => 6),
        array(0 => 87, 1 => 2),
        array(0 => 87, 1 => 3),
        array(0 => 87, 1 => 2),
        array(0 => 87, 1 => 3),
        array(0 => 87, 1 => 11),
        array(0 => 101, 1 => 2),
        array(0 => 101, 1 => 1),
        array(0 => 87, 1 => 5),
        array(0 => 87, 1 => 7),
        array(0 => 87, 1 => 2),
        array(0 => 87, 1 => 7),
        array(0 => 87, 1 => 10),
        array(0 => 87, 1 => 7),
        array(0 => 87, 1 => 10),
        array(0 => 87, 1 => 3),
        array(0 => 87, 1 => 4),
        array(0 => 87, 1 => 2),
        array(0 => 87, 1 => 2),
        array(0 => 87, 1 => 3),
        array(0 => 87, 1 => 4),
        array(0 => 87, 1 => 5),
        array(0 => 94, 1 => 2),
        array(0 => 94, 1 => 1),
        array(0 => 94, 1 => 0),
        array(0 => 103, 1 => 4),
        array(0 => 103, 1 => 2),
        array(0 => 103, 1 => 2),
        array(0 => 103, 1 => 2),
        array(0 => 103, 1 => 2),
        array(0 => 103, 1 => 2),
        array(0 => 103, 1 => 4),
        array(0 => 98, 1 => 1),
        array(0 => 98, 1 => 3),
        array(0 => 97, 1 => 4),
        array(0 => 97, 1 => 3),
        array(0 => 97, 1 => 3),
        array(0 => 95, 1 => 1),
        array(0 => 95, 1 => 1),
        array(0 => 95, 1 => 4),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 1),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 2),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 95, 1 => 3),
        array(0 => 104, 1 => 8),
        array(0 => 104, 1 => 7),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 3),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 3),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 3),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 2),
        array(0 => 92, 1 => 1),
        array(0 => 92, 1 => 3),
        array(0 => 109, 1 => 1),
        array(0 => 109, 1 => 1),
        array(0 => 109, 1 => 1),
        array(0 => 108, 1 => 1),
        array(0 => 108, 1 => 4),
        array(0 => 108, 1 => 1),
        array(0 => 108, 1 => 3),
        array(0 => 108, 1 => 4),
        array(0 => 108, 1 => 3),
        array(0 => 108, 1 => 4),
        array(0 => 96, 1 => 3),
        array(0 => 114, 1 => 2),
        array(0 => 114, 1 => 0),
        array(0 => 115, 1 => 3),
        array(0 => 115, 1 => 5),
        array(0 => 115, 1 => 2),
        array(0 => 115, 1 => 2),
        array(0 => 115, 1 => 4),
        array(0 => 115, 1 => 3),
        array(0 => 115, 1 => 5),
        array(0 => 115, 1 => 3),
        array(0 => 115, 1 => 2),
        array(0 => 100, 1 => 1),
        array(0 => 100, 1 => 2),
        array(0 => 116, 1 => 1),
        array(0 => 116, 1 => 3),
        array(0 => 113, 1 => 2),
        array(0 => 117, 1 => 1),
        array(0 => 117, 1 => 2),
        array(0 => 118, 1 => 3),
        array(0 => 118, 1 => 4),
        array(0 => 118, 1 => 5),
        array(0 => 118, 1 => 6),
        array(0 => 118, 1 => 2),
        array(0 => 110, 1 => 4),
        array(0 => 119, 1 => 4),
        array(0 => 119, 1 => 5),
        array(0 => 120, 1 => 3),
        array(0 => 120, 1 => 1),
        array(0 => 120, 1 => 0),
        array(0 => 93, 1 => 3),
        array(0 => 93, 1 => 2),
        array(0 => 121, 1 => 3),
        array(0 => 121, 1 => 2),
        array(0 => 102, 1 => 2),
        array(0 => 102, 1 => 0),
        array(0 => 122, 1 => 2),
        array(0 => 122, 1 => 2),
        array(0 => 112, 1 => 1),
        array(0 => 112, 1 => 2),
        array(0 => 112, 1 => 1),
        array(0 => 112, 1 => 3),
        array(0 => 112, 1 => 4),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
        array(0 => 106, 1 => 1),
        array(0 => 107, 1 => 1),
        array(0 => 107, 1 => 1),
        array(0 => 107, 1 => 1),
        array(0 => 105, 1 => 3),
        array(0 => 123, 1 => 1),
        array(0 => 123, 1 => 3),
        array(0 => 123, 1 => 0),
        array(0 => 124, 1 => 3),
        array(0 => 124, 1 => 3),
        array(0 => 124, 1 => 1),
        array(0 => 111, 1 => 2),
        array(0 => 111, 1 => 3),
        array(0 => 125, 1 => 2),
        array(0 => 125, 1 => 1),
        array(0 => 126, 1 => 3),
        array(0 => 126, 1 => 3),
        array(0 => 126, 1 => 1),
        array(0 => 126, 1 => 3),
        array(0 => 126, 1 => 3),
        array(0 => 126, 1 => 2),
        array(0 => 126, 1 => 1),
        array(0 => 99, 1 => 1),
        array(0 => 99, 1 => 0),
    );

    public static $yyReduceMap = array(
        0   => 0,
        1   => 1,
        2   => 2,
        4   => 4,
        5   => 5,
        6   => 6,
        7   => 7,
        8   => 8,
        9   => 9,
        10  => 10,
        11  => 11,
        12  => 12,
        13  => 13,
        14  => 14,
        23  => 14,
        24  => 14,
        45  => 14,
        67  => 14,
        68  => 14,
        75  => 14,
        76  => 14,
        81  => 14,
        100 => 14,
        105 => 14,
        106 => 14,
        111 => 14,
        113 => 14,
        114 => 14,
        118 => 14,
        120 => 14,
        121 => 14,
        122 => 14,
        125 => 14,
        142 => 14,
        186 => 14,
        191 => 14,
        203 => 14,
        15  => 15,
        16  => 16,
        17  => 17,
        18  => 18,
        19  => 19,
        22  => 19,
        204 => 19,
        20  => 20,
        74  => 20,
        21  => 21,
        101 => 21,
        103 => 21,
        104 => 21,
        131 => 21,
        25  => 25,
        26  => 26,
        27  => 27,
        29  => 27,
        28  => 28,
        30  => 30,
        31  => 30,
        32  => 32,
        33  => 33,
        34  => 34,
        35  => 35,
        36  => 36,
        37  => 37,
        38  => 38,
        39  => 39,
        40  => 40,
        42  => 40,
        41  => 41,
        43  => 43,
        44  => 44,
        46  => 46,
        47  => 47,
        48  => 48,
        49  => 49,
        51  => 49,
        50  => 50,
        52  => 50,
        53  => 53,
        54  => 54,
        55  => 55,
        56  => 56,
        57  => 57,
        58  => 58,
        59  => 59,
        60  => 60,
        61  => 61,
        70  => 61,
        158 => 61,
        162 => 61,
        166 => 61,
        167 => 61,
        62  => 62,
        159 => 62,
        165 => 62,
        63  => 63,
        64  => 64,
        65  => 64,
        66  => 66,
        69  => 69,
        71  => 71,
        72  => 72,
        73  => 72,
        77  => 77,
        78  => 78,
        79  => 78,
        80  => 78,
        82  => 82,
        117 => 82,
        83  => 83,
        86  => 83,
        84  => 84,
        85  => 85,
        87  => 87,
        88  => 88,
        89  => 89,
        94  => 89,
        90  => 90,
        93  => 90,
        91  => 91,
        96  => 91,
        92  => 92,
        95  => 92,
        97  => 97,
        98  => 98,
        99  => 99,
        102 => 102,
        107 => 107,
        108 => 108,
        109 => 109,
        110 => 110,
        112 => 112,
        115 => 115,
        116 => 116,
        119 => 119,
        123 => 123,
        124 => 124,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        132 => 132,
        188 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        140 => 137,
        138 => 138,
        139 => 139,
        141 => 141,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        160 => 160,
        161 => 161,
        163 => 163,
        164 => 164,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        187 => 187,
        189 => 189,
        190 => 190,
        192 => 192,
        193 => 193,
        194 => 194,
        195 => 195,
        196 => 196,
        197 => 196,
        199 => 196,
        198 => 198,
        200 => 200,
        201 => 201,
        202 => 202,
    );

    #line 206 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r0()
    {
        $this->_retvalue = $this->root_buffer->to_smarty_php();
    }

    #line 214 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r1()
    {
        if ($this->yystack[$this->yyidx + 0]->minor != null) {
            $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
        }
    }

    #line 221 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r2()
    {
        if ($this->yystack[$this->yyidx + 0]->minor != null) {
            // because of possible code injection
            $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
        }
    }

    #line 235 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r4()
    {
        if ($this->compiler->has_code) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp . $this->yystack[$this->yyidx + - 1]->minor, true));
        } else {
            $this->_retvalue = null;
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }

    #line 247 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r5()
    {
        $this->_retvalue = null;
    }

    #line 252 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r6()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 257 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r7()
    {
        if (strpos($this->yystack[$this->yyidx + 0]->minor, '<s') === 0) {
            $this->lex->is_phpScript = true;
        }
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            if ($this->lex->is_phpScript) {
                $s = addcslashes($this->yystack[$this->yyidx + 0]->minor, "'");
                $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $s);
            } else {
                $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error(self::Err3);
            }
            $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode('<?php ', true));
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            $this->_retvalue = null;
        }
    }

    #line 281 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r8()
    {
        if ($this->is_xml) {
            $this->compiler->tag_nocache = true;
            $this->is_xml = false;
            $save = $this->template->has_nocache_code;
            $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode("<?php echo '?>';?>\n", $this->compiler, true));
            $this->template->has_nocache_code = $save;
        } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, htmlspecialchars('?>', ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode('?>', true));
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            $this->_retvalue = null;
        }
    }

    #line 299 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r9()
    {
        if (!$this->lex->is_phpScript) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
        } else {
            $this->lex->is_phpScript = false;
            if ($this->php_handling == Smarty::PHP_PASSTHRU) {
                $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
            } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
            } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode('?>', true));
            } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                $this->_retvalue = null;
            }
        }
    }

    #line 317 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r10()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                if (!($this->smarty instanceof SmartyBC)) {
                    $this->compiler->trigger_template_error(self::Err3);
                }
                $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode('<%', true));
            } else {
                $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if ($this->asp_tags) {
                $this->_retvalue = null;
            } else {
                $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        }
    }

    #line 341 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r11()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, htmlspecialchars('%>', ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode('%>', true));
            } else {
                $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if ($this->asp_tags) {
                $this->_retvalue = null;
            } else {
                $this->_retvalue = new Smarty_Internal_ParseTree_Text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        }
    }

    #line 363 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r12()
    {
        $this->compiler->tag_nocache = true;
        $this->is_xml = true;
        $save = $this->template->has_nocache_code;
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));
        $this->template->has_nocache_code = $save;
    }

    #line 372 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r13()
    {
        $this->_retvalue = $this->compiler->processText($this->yystack[$this->yyidx + 0]->minor);
    }

    #line 376 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r14()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 380 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r15()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 385 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r16()
    {
        $this->strip = true;
    }

    #line 389 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r17()
    {
        $this->strip = false;
    }

    #line 393 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r18()
    {
        if ($this->strip) {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, $this->yystack[$this->yyidx + 0]->minor);
        }
    }

    #line 402 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r19()
    {
        $this->_retvalue = '';
    }

    #line 406 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r20()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
    }

    #line 410 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r21()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 431 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r25()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(), array('value' => $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 435 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r26()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 2]->minor, 'modifierlist' => $this->yystack[$this->yyidx + - 1]->minor));
    }

    #line 439 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r27()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 1]->minor));
    }

    #line 443 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 2]->minor, 'modifierlist' => $this->yystack[$this->yyidx + - 1]->minor));
    }

    #line 456 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r30()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array(array('value' => $this->yystack[$this->yyidx + 0]->minor), array('var' => "'" . $this->yystack[$this->yyidx + - 2]->minor . "'")));
    }

    #line 464 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r32()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + - 1]->minor), array('var' => "'" . $this->yystack[$this->yyidx + - 3]->minor . "'")), $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 468 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r33()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + - 1]->minor), array('var' => $this->yystack[$this->yyidx + - 3]->minor['var'])), $this->yystack[$this->yyidx + 0]->minor), array('smarty_internal_index' => $this->yystack[$this->yyidx + - 3]->minor['smarty_internal_index']));
    }

    #line 473 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r34()
    {
        if (defined($this->yystack[$this->yyidx + - 1]->minor)) {
            if (isset($this->smarty->security_policy)) {
                $this->smarty->security_policy->isTrustedConstant($this->yystack[$this->yyidx + - 1]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 1]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor);
        }
    }

    #line 483 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r35()
    {
        if (defined($this->yystack[$this->yyidx + 0]->minor)) {
            if (isset($this->smarty->security_policy)) {
                $this->smarty->security_policy->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(), array('value' => $this->yystack[$this->yyidx + 0]->minor));
        } else {
            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor, array());
        }
    }

    #line 496 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r36()
    {
        if (defined($this->yystack[$this->yyidx + - 2]->minor)) {
            if (isset($this->smarty->security_policy)) {
                $this->smarty->security_policy->isTrustedConstant($this->yystack[$this->yyidx + - 2]->minor, $this->compiler);
            }
            $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 2]->minor, 'modifierlist' => $this->yystack[$this->yyidx + - 1]->minor));
        } else {
            $this->_retvalue = '<?php ob_start();?>' . $this->compiler->compileTag($this->yystack[$this->yyidx + - 2]->minor, $this->yystack[$this->yyidx + 0]->minor) . '<?php echo ';
            $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(), array('modifierlist' => $this->yystack[$this->yyidx + - 1]->minor, 'value' => 'ob_get_clean()')) . ';?>';
        }
    }

    #line 509 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r37()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 3]->minor, $this->yystack[$this->yyidx + 0]->minor, array('object_method' => $this->yystack[$this->yyidx + - 1]->minor));
    }

    #line 514 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r38()
    {
        $this->_retvalue = '<?php ob_start();?>' . $this->compiler->compileTag($this->yystack[$this->yyidx + - 4]->minor, $this->yystack[$this->yyidx + 0]->minor, array('object_method' => $this->yystack[$this->yyidx + - 2]->minor)) . '<?php echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(), array('modifierlist' => $this->yystack[$this->yyidx + - 1]->minor, 'value' => 'ob_get_clean()')) . ';?>';
    }

    #line 520 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r39()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 1]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(), array('if condition' => $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 525 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r40()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 2]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, $this->yystack[$this->yyidx + 0]->minor, array('if condition' => $this->yystack[$this->yyidx + - 1]->minor));
    }

    #line 530 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r41()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 1]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(), array('if condition' => $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 541 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r43()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 9]->minor), array('ifexp' => $this->yystack[$this->yyidx + - 6]->minor), array('var' => $this->yystack[$this->yyidx + - 2]->minor), array('step' => $this->yystack[$this->yyidx + - 1]->minor))), 1);
    }

    #line 545 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r44()
    {
        $this->_retvalue = '=' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 553 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 3]->minor), array('to' => $this->yystack[$this->yyidx + - 1]->minor))), 0);
    }

    #line 557 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 5]->minor), array('to' => $this->yystack[$this->yyidx + - 3]->minor), array('step' => $this->yystack[$this->yyidx + - 1]->minor))), 0);
    }

    #line 562 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 567 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r49()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('from' => $this->yystack[$this->yyidx + - 4]->minor), array('item' => $this->yystack[$this->yyidx + - 1]->minor))));
    }

    #line 571 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r50()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('from' => $this->yystack[$this->yyidx + - 7]->minor), array('item' => $this->yystack[$this->yyidx + - 1]->minor), array('key' => $this->yystack[$this->yyidx + - 4]->minor))));
    }

    #line 584 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r53()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array(array_merge(array($this->yystack[$this->yyidx + - 1]->minor), $this->yystack[$this->yyidx + 0]->minor))));
    }

    #line 588 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r54()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array_merge(array(array_merge(array($this->yystack[$this->yyidx + - 2]->minor), $this->yystack[$this->yyidx + - 1]->minor)), $this->yystack[$this->yyidx + 0]->minor)));
    }

    #line 593 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r55()
    {
        $j = strrpos($this->yystack[$this->yyidx + 0]->minor, '.');
        if ($this->yystack[$this->yyidx + 0]->minor[$j + 1] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
        } else {
            // {$smarty.block.parent}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler);
        }
    }

    #line 606 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r56()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor . 'close', array());
    }

    #line 610 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r57()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 1]->minor . 'close', array(), array('modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 615 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r58()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 2]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 619 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r59()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 3]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + - 1]->minor, 'modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 627 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r60()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
        $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 633 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r61()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }

    #line 638 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r62()
    {
        $this->_retvalue = array();
    }

    #line 643 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r63()
    {
        if (defined($this->yystack[$this->yyidx + 0]->minor)) {
            if (isset($this->smarty->security_policy)) {
                $this->smarty->security_policy->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
            }
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => $this->yystack[$this->yyidx + 0]->minor);
        } else {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => "'" . $this->yystack[$this->yyidx + 0]->minor . "'");
        }
    }

    #line 654 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r64()
    {
        $this->_retvalue = array(trim($this->yystack[$this->yyidx + - 1]->minor, " =\n\r\t") => $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 662 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r66()
    {
        $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
    }

    #line 674 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r69()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 687 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r71()
    {
        $this->yystack[$this->yyidx + - 2]->minor[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor;
    }

    #line 692 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r72()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + - 2]->minor, 'value' => $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 720 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r77()
    {
        $this->_retvalue = '$_smarty_tpl->getStreamVariable(\'' . $this->yystack[$this->yyidx + - 2]->minor . '://' . $this->yystack[$this->yyidx + 0]->minor . '\')';
    }

    #line 725 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r78()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . trim($this->yystack[$this->yyidx + - 1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 744 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r82()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier', array(), array('value' => $this->yystack[$this->yyidx + - 1]->minor, 'modifierlist' => $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 750 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r83()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 754 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r84()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + - 2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

    #line 758 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r85()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + - 2]->minor . ',(array)' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

    #line 766 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r87()
    {
        $this->_retvalue = '!(' . $this->yystack[$this->yyidx + - 2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

    #line 770 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r88()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + - 2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

    #line 774 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r89()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }

    #line 778 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r90()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }

    #line 782 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r91()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + - 2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

    #line 786 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r92()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + - 2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }

    #line 806 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r97()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 814 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r98()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 6]->minor . ' ? ' . $this->compiler->compileVariable("'" . $this->yystack[$this->yyidx + - 2]->minor . "'") . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 818 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r99()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 5]->minor . ' ? ' . $this->yystack[$this->yyidx + - 2]->minor . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 833 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r102()
    {
        $this->_retvalue = '!' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 854 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r107()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 858 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r108()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . '.';
    }

    #line 862 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r109()
    {
        $this->_retvalue = '.' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 867 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r110()
    {
        if (defined($this->yystack[$this->yyidx + 0]->minor)) {
            if (isset($this->smarty->security_policy)) {
                $this->smarty->security_policy->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
            }
            $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
        }
    }

    #line 884 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r112()
    {
        $this->_retvalue = "(" . $this->yystack[$this->yyidx + - 1]->minor . ")";
    }

    #line 899 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r115()
    {
        self::$prefix_number ++;
        if ($this->yystack[$this->yyidx + - 2]->minor['var'] == '\'smarty\'') {
            $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . ' = ' . $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + - 2]->minor['smarty_internal_index']) . ';?>';
        } else {
            $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . ' = ' . $this->compiler->compileVariable($this->yystack[$this->yyidx + - 2]->minor['var']) . $this->yystack[$this->yyidx + - 2]->minor['smarty_internal_index'] . ';?>';
        }
        $this->_retvalue = '$_tmp' . self::$prefix_number . '::' . $this->yystack[$this->yyidx + 0]->minor[0] . $this->yystack[$this->yyidx + 0]->minor[1];
    }

    #line 911 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r116()
    {
        self::$prefix_number ++;
        $this->compiler->prefix_code[] = '<?php ob_start();?>' . $this->yystack[$this->yyidx + - 1]->minor . '<?php $_tmp' . self::$prefix_number . '=ob_get_clean();?>';
        $this->_retvalue = '$_tmp' . self::$prefix_number;
    }

    #line 927 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r119()
    {
        if (!in_array(strtolower($this->yystack[$this->yyidx + - 2]->minor), array('self', 'parent')) && (!$this->security || $this->smarty->security_policy->isTrustedStaticClassAccess($this->yystack[$this->yyidx + - 2]->minor, $this->yystack[$this->yyidx + 0]->minor, $this->compiler))) {
            if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + - 2]->minor])) {
                $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + - 2]->minor] . '::' . $this->yystack[$this->yyidx + 0]->minor[0] . $this->yystack[$this->yyidx + 0]->minor[1];
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '::' . $this->yystack[$this->yyidx + 0]->minor[0] . $this->yystack[$this->yyidx + 0]->minor[1];
            }
        } else {
            $this->compiler->trigger_template_error("static class '" . $this->yystack[$this->yyidx + - 2]->minor . "' is undefined or not allowed by security setting");
        }
    }

    #line 961 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r123()
    {
        if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current 
            $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
            $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']) . $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        }
    }

    #line 974 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r124()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[$this->yyidx + - 2]->minor . ']->' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 984 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r126()
    {
        $this->_retvalue = '$_smarty_tpl->getConfigVariable( \'' . $this->yystack[$this->yyidx + - 1]->minor . '\')';
    }

    #line 988 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r127()
    {
        $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable( \'' . $this->yystack[$this->yyidx + - 2]->minor . '\')) ? $tmp' . $this->yystack[$this->yyidx + 0]->minor . ' :null)';
    }

    #line 992 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r128()
    {
        $this->_retvalue = '$_smarty_tpl->getConfigVariable( ' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }

    #line 996 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r129()
    {
        $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable( ' . $this->yystack[$this->yyidx + - 2]->minor . ')) ? $tmp' . $this->yystack[$this->yyidx + 0]->minor . ' : null)';
    }

    #line 1000 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r130()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + - 1]->minor, 'smarty_internal_index' => $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 1013 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r132()
    {
        return;
    }

    #line 1019 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r133()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor) . ']';
    }

    #line 1023 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r134()
    {
        $this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[$this->yyidx + - 2]->minor) . '->' . $this->yystack[$this->yyidx + 0]->minor . ']';
    }

    #line 1027 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r135()
    {
        if (defined($this->yystack[$this->yyidx + 0]->minor)) {
            if (isset($this->smarty->security_policy)) {
                $this->smarty->security_policy->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
            }
            $this->_retvalue = "[" . $this->yystack[$this->yyidx + 0]->minor . "]";
        } else {
            $this->_retvalue = "['" . $this->yystack[$this->yyidx + 0]->minor . "']";
        }
    }

    #line 1038 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r136()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + 0]->minor . "]";
    }

    #line 1043 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r137()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + - 1]->minor . "]";
    }

    #line 1048 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r138()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + - 1]->minor . '\'][\'index\']') . ']';
    }

    #line 1052 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r139()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + - 3]->minor . '\'][\'' . $this->yystack[$this->yyidx + - 1]->minor . '\']') . ']';
    }

    #line 1062 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r141()
    {
        $this->_retvalue = '[]';
    }

    #line 1076 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r143()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 1081 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r144()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + 0]->minor . '\'';
    }

    #line 1086 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r145()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }

    #line 1093 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r146()
    {
        if ($this->yystack[$this->yyidx + - 1]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + - 1]->minor['smarty_internal_index']) . $this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + - 1]->minor['var']) . $this->yystack[$this->yyidx + - 1]->minor['smarty_internal_index'] . $this->yystack[$this->yyidx + 0]->minor;
        }
    }

    #line 1102 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r147()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 1107 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r148()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 1112 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r149()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + - 1]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 1119 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r150()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[$this->yyidx + - 1]->minor) . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

    #line 1126 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r151()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

    #line 1133 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r152()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{\'' . $this->yystack[$this->yyidx + - 4]->minor . '\'.' . $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }

    #line 1141 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r153()
    {
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 1149 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r154()
    {
        if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + - 3]->minor, $this->compiler)) {
            if (strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'array') === 0 || is_callable($this->yystack[$this->yyidx + - 3]->minor)) {
                $func_name = strtolower($this->yystack[$this->yyidx + - 3]->minor);
                if ($func_name == 'isset') {
                    if (count($this->yystack[$this->yyidx + - 1]->minor) == 0) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "isset()"');
                    }
                    $par = implode(',', $this->yystack[$this->yyidx + - 1]->minor);
                    if (strncasecmp($par, '$_smarty_tpl->getConfigVariable', strlen('$_smarty_tpl->getConfigVariable')) === 0) {
                        self::$prefix_number ++;
                        $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . '=' . str_replace(')', ', false)', $par) . ';?>';
                        $isset_par = '$_tmp' . self::$prefix_number;
                    } else {
                        $isset_par = str_replace("')->value", "',null,true,false)->value", $par);
                    }
                    $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . $isset_par . ")";
                } elseif (in_array($func_name, array('empty', 'reset', 'current', 'end', 'prev', 'next'))) {
                    if (count($this->yystack[$this->yyidx + - 1]->minor) != 1) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "empty()"');
                    }
                    if ($func_name == 'empty') {
                        $this->_retvalue = $func_name . '(' . str_replace("')->value", "',null,true,false)->value", $this->yystack[$this->yyidx + - 1]->minor[0]) . ')';
                    } else {
                        $this->_retvalue = $func_name . '(' . $this->yystack[$this->yyidx + - 1]->minor[0] . ')';
                    }
                } else {
                    $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ")";
                }
            } else {
                $this->compiler->trigger_template_error("unknown function \"" . $this->yystack[$this->yyidx + - 3]->minor . "\"");
            }
        }
    }

    #line 1188 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r155()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + - 3]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ")";
    }

    #line 1195 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r156()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        self::$prefix_number ++;
        $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . '=' . $this->compiler->compileVariable("'" . $this->yystack[$this->yyidx + - 3]->minor . "'") . ';?>';
        $this->_retvalue = '$_tmp' . self::$prefix_number . '(' . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ')';
    }

    #line 1206 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r157()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 2]->minor, array($this->yystack[$this->yyidx + 0]->minor));
    }

    #line 1223 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r160()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 2]->minor, array(array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor)));
    }

    #line 1227 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r161()
    {
        $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor));
    }

    #line 1235 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r163()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }

    #line 1243 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r164()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 1262 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r168()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '', 'method');
    }

    #line 1267 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r169()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'method');
    }

    #line 1272 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r170()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '');
    }

    #line 1277 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r171()
    {
        $this->_retvalue = array('$' . $this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'property');
    }

    #line 1282 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r172()
    {
        $this->_retvalue = array('$' . $this->yystack[$this->yyidx + - 2]->minor, $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor, 'property');
    }

    #line 1288 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r173()
    {
        $this->_retvalue = '==';
    }

    #line 1292 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r174()
    {
        $this->_retvalue = '!=';
    }

    #line 1296 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r175()
    {
        $this->_retvalue = '>';
    }

    #line 1300 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r176()
    {
        $this->_retvalue = '<';
    }

    #line 1304 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r177()
    {
        $this->_retvalue = '>=';
    }

    #line 1308 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r178()
    {
        $this->_retvalue = '<=';
    }

    #line 1312 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r179()
    {
        $this->_retvalue = '===';
    }

    #line 1316 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r180()
    {
        $this->_retvalue = '!==';
    }

    #line 1320 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r181()
    {
        $this->_retvalue = '%';
    }

    #line 1324 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r182()
    {
        $this->_retvalue = '&&';
    }

    #line 1328 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r183()
    {
        $this->_retvalue = '||';
    }

    #line 1332 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r184()
    {
        $this->_retvalue = ' XOR ';
    }

    #line 1339 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r185()
    {
        $this->_retvalue = 'array(' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }

    #line 1347 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r187()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 1355 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r189()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '=>' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 1359 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r190()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + - 2]->minor . '\'=>' . $this->yystack[$this->yyidx + 0]->minor;
    }

    #line 1371 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r192()
    {
        $this->_retvalue = "''";
    }

    #line 1375 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r193()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor->to_smarty_php();
    }

    #line 1380 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r194()
    {
        $this->yystack[$this->yyidx + - 1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
    }

    #line 1385 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r195()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 1389 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r196()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code($this, '(string)' . $this->yystack[$this->yyidx + - 1]->minor);
    }

    #line 1397 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r198()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code($this, '(string)$_smarty_tpl->tpl_vars[\'' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '\']->value');
    }

    #line 1405 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r200()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Code($this, '(string)(' . $this->yystack[$this->yyidx + - 1]->minor . ')');
    }

    #line 1409 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r201()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[$this->yyidx + - 1]->minor);
    }

    #line 1413 "../smarty/lexer/smarty_internal_templateparser.y"
    function yy_r202()
    {
        $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this, $this->yystack[$this->yyidx + 0]->minor);
    }

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if ($this->yyTraceFILE && $yyruleno >= 0
            && $yyruleno < count(self::$yyRuleName)
        ) {
            fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n",
                    $this->yyTracePrompt, $yyruleno,
                    self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno][0];
        $yysize = self::$yyRuleInfo[$yyruleno][1];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i --) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx ++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 188 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        #line 181 "../smarty/lexer/smarty_internal_templateparser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = - 1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor == 0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sInput %s\n",
                    $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                !$this->yy_is_expected_token($yymajor)
            ) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt --;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE, "%sSyntax Error!\n",
                            $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE, "%sDiscard input token %s\n",
                                    $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                            $yymx != self::YYERRORSYMBOL &&
                            ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}

