{
  "name": "gulp-rev",
  "version": "3.0.1",
  "description": "Static asset revisioning by appending content hash to filenames: unicorn.css => unicorn-098f6bcd.css",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/gulp-rev"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "maintainers": [
    {
      "name": "Justin Hileman",
      "email": "justin@justinhileman.info",
      "url": "http://justinhileman.info"
    }
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "gulpplugin",
    "rev",
    "revision",
    "hash",
    "optimize",
    "version",
    "versioning",
    "cache",
    "expire",
    "static",
    "asset",
    "assets"
  ],
  "dependencies": {
    "gulp-util": "^3.0.0",
    "object-assign": "^2.0.0",
    "through2": "^0.6.1",
    "vinyl-file": "^1.1.0"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "readme": "# gulp-rev [![Build Status](https://travis-ci.org/sindresorhus/gulp-rev.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-rev)\n\n> Static asset revisioning by appending content hash to filenames\n`unicorn.css` → `unicorn-098f6bcd.css`\n\nMake sure to set the files to [never expire](http://developer.yahoo.com/performance/rules.html#expires) for this to have an effect.\n\n\n## Install\n\n```\n$ npm install --save-dev gulp-rev\n```\n\n\n## Usage\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\n\ngulp.task('default', function () {\n\treturn gulp.src('src/*.css')\n\t\t.pipe(rev())\n\t\t.pipe(gulp.dest('dist'));\n});\n```\n\n\n## API\n\n### rev()\n\n### rev.manifest([path], [options])\n\n#### path\n\nType: `string`  \nDefault: `\"rev-manifest.json\"`\n\nManifest file path.\n\n#### options\n\n##### base\n\nType: `string`  \nDefault: `process.cwd()`\n\nOverride the `base` of the manifest file.\n\n##### cwd\n\nType: `string`  \nDefault: `process.cwd()`\n\nOverride the `cwd` (current working directory) of the manifest file.\n\n##### merge\n\nType: `boolean`  \nDefault: `false`\n\nMerge existing manifest file.\n\n\n### Original path\n\nOriginal file paths are stored at `file.revOrigPath`. This could come in handy for things like rewriting references to the assets.\n\n\n### Asset hash\n\nThe hash of each rev'd file is stored at `file.revHash`. You can use this for customizing the file renaming, or for building different manifest formats.\n\n\n### Asset manifest\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\n\ngulp.task('default', function () {\n\t// by default, gulp would pick `assets/css` as the base,\n\t// so we need to set it explicitly:\n\treturn gulp.src(['assets/css/*.css', 'assets/js/*.js'], {base: 'assets'})\n\t\t.pipe(gulp.dest('build/assets'))  // copy original assets to build dir\n\t\t.pipe(rev())\n\t\t.pipe(gulp.dest('build/assets'))  // write rev'd assets to build dir\n\t\t.pipe(rev.manifest())\n\t\t.pipe(gulp.dest('build/assets')); // write manifest to build dir\n});\n```\n\nAn asset manifest, mapping the original paths to the revisioned paths, will be written to `build/assets/rev-manifest.json`:\n\n```json\n{\n\t\"css/unicorn.css\": \"css/unicorn-098f6bcd.css\",\n\t\"js/unicorn.js\": \"js/unicorn-273c2cin.js\"\n}\n```\n\nBy default, `rev-manifest.json` will be replaced as a whole. To merge with an existing manifest, pass `merge: true` and the output destination (as `base`) to `rev.manifest()`:\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\n\ngulp.task('default', function () {\n\t// by default, gulp would pick `assets/css` as the base,\n\t// so we need to set it explicitly:\n\treturn gulp.src(['assets/css/*.css', 'assets/js/*.js'], {base: 'assets'})\n\t\t.pipe(gulp.dest('build/assets'))\n\t\t.pipe(rev())\n\t\t.pipe(gulp.dest('build/assets'))\n\t\t.pipe(rev.manifest({\n\t\t\tbase: 'build/assets',\n\t\t\tmerge: true // merge with the existing manifest (if one exists)\n\t\t}))\n\t\t.pipe(gulp.dest('build/assets'));\n});\n```\n\nYou can optionally call `rev.manifest('manifest.json')` to give it a different path or filename.\n\n\n## Sourcemaps and `gulp-concat`\n\nBecause of the way `gulp-concat` handles file paths, you may need to set `cwd` and `path` manually on your `gulp-concat` instance to get everything to work correctly:\n\n```js\nvar gulp = require('gulp');\nvar rev = require('gulp-rev');\nvar sourcemaps = require('gulp-sourcemaps');\nvar concat = require('gulp-concat');\n\ngulp.task('default', function () {\n\treturn gulp.src('src/*.js')\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(concat({path: 'bundle.js', cwd: ''}))\n\t\t.pipe(rev())\n\t\t.pipe(sourcemaps.write('.'))\n\t\t.pipe(gulp.dest('dist'));\n```\n\n\n## Streaming\n\nThis plugin does not support streaming. If you have files from a streaming source, such as browserify, you should use [gulp-buffer](https://github.com/jeromew/gulp-buffer) before `gulp-rev` in your pipeline:\n\n```js\nvar gulp = require('gulp');\nvar browserify = require('browserify');\nvar source = require('vinyl-source-stream');\nvar buffer = require('gulp-buffer');\nvar rev = require('gulp-rev');\n\ngulp.task('default', function () {\n\treturn browserify('src/index.js')\n\t\t.bundle({debug: true})\n\t\t.pipe(source('index.min.js'))\n\t\t.pipe(buffer())\n\t\t.pipe(rev())\n\t\t.pipe(gulp.dest('dist'))\n});\n```\n\n\n## Integration\n\nFor more info on how to integrate **gulp-rev** into your app, have a look at the [integration guide](integration.md).\n\n\n## Works with gulp-rev\n\n- [gulp-rev-replace](https://github.com/jamesknelson/gulp-rev-replace) - Rewrite occurences of filenames which have been renamed\n- [gulp-rev-css-url](https://github.com/galkinrost/gulp-rev-css-url) - Override URLs in CSS files with the revved ones\n- [gulp-rev-outdated](https://github.com/shonny-ua/gulp-rev-outdated) - Old static asset revision files filter\n- [gulp-rev-collector](https://github.com/shonny-ua/gulp-rev-collector) - Static asset revision data collector\n- [rev-del](https://github.com/callumacrae/rev-del) - Delete old unused assets\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/gulp-rev/issues"
  },
  "_id": "gulp-rev@3.0.1",
  "dist": {
    "shasum": "666ab3ce3d022fa39a9e312fae83088405159f23"
  },
  "_from": "gulp-rev@",
  "_resolved": "https://registry.npmjs.org/gulp-rev/-/gulp-rev-3.0.1.tgz"
}
